ARG BUILD_IMG=docker.io/golang:bookworm
ARG RUNTIME_IMG=docker.io/ubuntu:jammy
FROM $BUILD_IMG AS builder
ARG BUILD_TAGS=nomsgpack,pdfium

WORKDIR /usr/src/app

# RUN apt-get update && apt-get --no-install-recommends install -y 

RUN curl -sS --location https://github.com/bblanchon/pdfium-binaries/releases/latest/download/pdfium-linux-x64.tgz \
    -o /tmp/pdfium.tgz
WORKDIR /opt/pdfium
RUN tar -xf /tmp/pdfium.tgz

RUN mkdir --parents /usr/local/lib/pkgconfig && echo "Name: PDFium\nDescription: PDFium\nVersion: 6392\nRequires:\n\nLibs: -L/opt/pdfium/lib -lpdfium\nCflags: -I/opt/pdfium/include\n" > /usr/local/lib/pkgconfig/pdfium.pc


WORKDIR /usr/src/app

ENV HOME=/tmp GOPATH=/tmp

# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .

ENV CGO_ENABLED=1 GIN_MODE=release DEBIAN_FRONTEND=noninteractive

RUN go build -ldflags="-s -w" -tags "${BUILD_TAGS}" -v -o /go/text-extraction-service
## Runtime Image ##
FROM $RUNTIME_IMG

COPY --from=builder /go/text-extraction-service /usr/local/bin/text-extraction-service

WORKDIR /
RUN apt-get update && \
    apt-get download libreoffice-core-nogui &&\
    dpkg --fsys-tarfile libreoffice-core-nogui_*.deb | tar -x ./usr/lib/libreoffice/program/libpdfiumlo.so && \
    rm libreoffice-core-nogui_*.deb && \
    apt-get -y --no-install-recommends --no-install-suggests install ca-certificates wv libopenjp2-7 liblcms2-2 libabsl-dev tesseract-ocr tesseract-ocr-script-latn tesseract-ocr-osd && \
    rm -rf /var/lib/apt
    
# disguise the LibreOffice lib as pdfium
RUN ln -s /usr/lib/libreoffice/program/libpdfiumlo.so /usr/lib/libpdfium.so \
    && ldd /usr/lib/libpdfium.so

USER nobody

ENV GIN_MODE=release HOME=/tmp
# Expose the service and Nats (optional)
EXPOSE 4222 8080

VOLUME /tmp/nats

CMD ["text-extraction-service"]
