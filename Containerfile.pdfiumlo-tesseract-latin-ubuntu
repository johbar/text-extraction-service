ARG BUILD_IMG=docker.io/golang:trixie
ARG RUNTIME_IMG=docker.io/ubuntu:jammy
FROM $BUILD_IMG AS builder
ARG BUILD_TAGS=
ARG DEBIAN_FRONTEND=noninteractive
ARG GOARM64=v8.0
ARG GOAMD64=v2

WORKDIR /usr/src/app

ENV HOME=/tmp GOPATH=/tmp

# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .

RUN go build -trimpath -ldflags="-w" -tags "goexperiment.jsonv2 ${BUILD_TAGS}" -v -o /go/text-extraction-service

## Runtime Image ##
FROM $RUNTIME_IMG
ARG DEBIAN_FRONTEND=noninteractive

COPY --from=builder /go/text-extraction-service /usr/local/bin/text-extraction-service

WORKDIR /
RUN apt-get update && \
    apt-get download libreoffice-core-nogui &&\
    dpkg --fsys-tarfile libreoffice-core-nogui_*.deb | tar -x ./usr/lib/libreoffice/program/libpdfiumlo.so && \
    rm libreoffice-core-nogui_*.deb && \
    apt-get -y --no-install-recommends --no-install-suggests install \
    ca-certificates ca-certificates libfreetype6 libicu70 libjpeg8 antiword libopenjp2-7 liblcms2-2 libabsl-dev tesseract-ocr tesseract-ocr-script-latn tesseract-ocr-osd && \
    rm -rf /var/lib/apt
    
USER nobody

ENV HOME=/tmp
# Expose the service and NATS (optional)
EXPOSE 4222 8080

VOLUME /tmp/nats

CMD ["text-extraction-service"]
