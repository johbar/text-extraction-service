# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Build service
        run: go build -tags nomsgpack
      - name: Install dependencies
        run: | 
          apt-get update -qq
          apt-get install -q -y ca-certificates wv curl
      - name: Install libpdfium
        run: curl -sS --location https://github.com/bblanchon/pdfium-binaries/releases/latest/download/pdfium-linux-x64.tgz | tar -xz -C /usr lib/libpdfium.so
      - name: Run basic test
        env:
          TES_REMOVE_NEWLINES: '0'
        run: time ./text-extraction-service pkg/pdflibwrappers/testdata/2000001.pdf
  build-linux-embedded:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Download libpdfium
        run: pkg/pdflibwrappers/pdfium_purego/download-pdfium.sh
      - name: Build service
        run: go build -tags nomsgpack,pdfium_embed
      - name: Run basic test
        env:
          TES_REMOVE_NEWLINES: '0'
        run: time ./text-extraction-service pkg/pdflibwrappers/testdata/2000001.pdf
  build-on-darwin:
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Download libpdfium
        run: pkg/pdflibwrappers/pdfium_purego/download-pdfium.sh
      - name: Build service
        run: go build -tags nomsgpack,pdfium_embed
      - name: Run basic test
        env:
          TES_REMOVE_NEWLINES: '0'
        run: time ./text-extraction-service pkg/pdflibwrappers/testdata/2000001.pdf
  build-on-alpine:
      runs-on: "alpine-latest"
      steps:
        - uses: actions/checkout@v4
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
        - name: Download libpdfium
          run: pkg/pdflibwrappers/pdfium_purego/download-pdfium.sh
        - name: Build service
          run: go build -tags nomsgpack,pdfium_embed
        - name: Run basic test
          env:
            TES_REMOVE_NEWLINES: '0'
          run: time ./text-extraction-service pkg/pdflibwrappers/testdata/2000001.pdf