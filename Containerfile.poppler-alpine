FROM docker.io/golang:alpine as builder

WORKDIR /usr/src/app

# Install build dependenies
RUN apk update && apk add build-base poppler-glib poppler-dev

# Do the Build rootless
USER nobody

ENV HOME=/tmp GOPATH=/tmp

# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .

ENV CGO_ENABLED=1

RUN go build -tags nomsgpack -v -o /go/text-extraction-service
## Runtime Image ##
FROM docker.io/alpine:latest

COPY --from=builder /go/text-extraction-service /usr/local/bin/text-extraction-service

# Needed at runtime, too:
RUN apk update && apk add poppler-glib wv

USER nobody

# Expose the service and Nats (optional)
EXPOSE 4222 8080

VOLUME /tmp/nats

ENV GIN_MODE=release

CMD text-extraction-service
