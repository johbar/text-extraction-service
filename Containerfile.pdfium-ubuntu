ARG BUILD_IMG=docker.io/golang:bookworm
ARG RUNTIME_IMG=docker.io/ubuntu:jammy
FROM $BUILD_IMG AS builder
ARG BUILD_TAGS=""
ARG GOARM64=v8.0
ARG GOAMD64=v2

WORKDIR /usr/src/app

ENV HOME=/tmp GOPATH=/tmp GIN_MODE=release

# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .

RUN pkg/pdflibwrappers/pdfium_purego/download-pdfium.sh
RUN go build -trimpath -ldflags="-w" -tags "nomsgpack $BUILD_TAGS" -v -o /go/text-extraction-service

## Runtime Image ##
FROM $RUNTIME_IMG

COPY --from=builder /go/text-extraction-service /usr/local/bin/text-extraction-service
COPY --from=builder /usr/src/app/pkg/pdflibwrappers/pdfium_purego/lib/libpdfium.so /usr/local/lib/


RUN apt-get update && \
    apt-get --no-install-recommends --no-install-suggests -y install ca-certificates antiword && \
    rm -rf /var/lib/apt

USER nobody

WORKDIR /tmp

ENV GIN_MODE=release HOME=/tmp TES_PDF_LIB_NAME=pdfium

# Expose the service and Nats (optional)
EXPOSE 4222 8080

VOLUME /tmp/nats

CMD ["text-extraction-service"]
