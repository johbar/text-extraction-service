ARG BUILD_IMG=docker.io/golang:bookworm
ARG RUNTIME_IMG=docker.io/ubuntu:jammy
FROM $BUILD_IMG AS builder
ARG BUILD_TAGS=nomsgpack,pdfium

WORKDIR /usr/src/app

RUN curl -sS --location https://github.com/bblanchon/pdfium-binaries/releases/latest/download/pdfium-linux-x64.tgz \
    -o /tmp/pdfium.tgz
WORKDIR /opt/pdfium
RUN tar -xf /tmp/pdfium.tgz

RUN mkdir --parents /usr/local/lib/pkgconfig && cat > /usr/local/lib/pkgconfig/pdfium.pc <<EOF
Name: PDFium
Description: PDFium
Version: 6392
Requires:

Libs: -L/opt/pdfium/lib -lpdfium
Cflags: -I/opt/pdfium/include
EOF
WORKDIR /usr/src/app

ENV HOME=/tmp GOPATH=/tmp

# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .

ENV CGO_ENABLED=1 GIN_MODE=release

RUN go build -tags "$BUILD_TAGS" -v -o /go/text-extraction-service
## Runtime Image ##
FROM $RUNTIME_IMG

COPY --from=builder /go/text-extraction-service /usr/local/bin/text-extraction-service

RUN apt-get update && \
    apt-get --no-install-recommends --no-install-suggests install ca-certificates wv -y && \
    rm -rf /var/lib/apt

COPY --from=builder /opt/pdfium/lib/libpdfium.so /usr/lib/libpdfium.so

# Expose the service and Nats (optional)
EXPOSE 4222 8080

VOLUME /tmp/nats

CMD ["text-extraction-service"]
